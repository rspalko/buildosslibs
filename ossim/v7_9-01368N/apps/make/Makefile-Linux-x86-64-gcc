KDU_GLIBS =
# KDU_GLIBS += -static -static-libgcc # Uncomment this to get a static build

CC = icpc

# The following variables allow you to turn on/off SIMD optimizations
INCLUDE_SSSE3 = 1 # Comment out to avoid SSSE3; value is not important
INCLUDE_SSE4 = 1  # Comment out to avoid SSE4.1; value is not important
INCLUDE_AVX = 1   # Comment out to avoid AVX; value is not important
INCLUDE_AVX2 = 1  # Comment out to avoid AVX2; value is not important

# You should not normally need to modify anything below
INCLUDES = -I../../coresys/common -I../args -I../image -I../compressed_io -I../support -I../client_server
C_OPT = -O2 -DNDEBUG -Wall $(KDU_GLIBS) $(CXXFLAGS)
C_OPT += -m64

C_OPT +=  -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 # Remove for 32-bit I/O
#C_OPT += -DKDU_CUSTOM_TEXT   # See "Internationalization" in "Compilation_Instructions.txt"

C_OPT += -msse2 -DKDU_X86_INTRINSICS # Enables basic X86 speedups

# File-specific compilation-directives follow; these are applied to functions
# whose invocation is constrained by run-time CPUID tests
SSSE3FLAGS =
SSE4FLAGS =
AVXFLAGS = 
AVX2FLAGS =

ifdef INCLUDE_SSSE3
  SSSE3FLAGS = -mssse3
else
  C_OPT += -DKDU_NO_SSSE3
endif

ifdef INCLUDE_SSE4
  SSE4FLAGS = -msse4.1
else
  C_OPT += -DKDU_NO_SSE4
endif

ifdef INCLUDE_AVX
  AVXFLAGS = -mavx
else
  C_OPT += -DKDU_NO_AVX
endif

ifdef INCLUDE_AVX2
  AVX2FLAGS = -mavx2 -mfma
else
  C_OPT += -DKDU_NO_AVX2
endif

CFLAGS = $(INCLUDES) $(C_OPT)

LIBS = -lm -lpthread # You may comment out "-lpthreads" if coresys was
                     # built using -DKDU_NO_THREADS
NETLIBS =

BIN_DIR = ../../bin/Linux-x86-64-gcc
LIB_DIR = ../../lib/Linux-x86-64-gcc

STATIC_LIB_SRC = libkdu.a
SHARED_LIB_SRC = libkdu_v79R.so

LIB_SRC = $(SHARED_LIB_SRC) # Change to $(STATIC_LIB_SRC) for static linking
LIB_IMPORTS = 

include Targets.mk
